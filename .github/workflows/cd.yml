name: CD
on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed 
    branches: [main]

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-22.04

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0
      
      - name: Login to DockerHub
        run: docker login -u ${{ github.actor }} -p ${{ secrets.DOCKER_TOKEN }}

      - name: Numero version
        run: echo "VERSION=1.0.${{ github.run_number }}" >> $GITHUB_ENV


      - name: Build image and push backend
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./backend
          file: ./backend/Backend.Dockerfile
          # Note: tags has to be all lower-case
          tags:  ${{github.actor}}/backend:latest
                 ${{ github.actor }}/backend:${{ env.VERSION }}
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push database
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./database
          file: ./database/Database.Dockerfile
          # Note: tags has to be all lower-case
          tags:  ${{github.actor}}/database:latest
                 ${{ github.actor }}/database:${{ env.VERSION }}
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push httpd
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./frontend
          file: ./frontend/Frontend.Dockerfile
          # Note: tags has to be all lower-case
          tags:  ${{github.actor}}/frontend:latest
                 ${{ github.actor }}/frontend:${{ env.VERSION }}
          push: ${{ github.ref == 'refs/heads/main' }}